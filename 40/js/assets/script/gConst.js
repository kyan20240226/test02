window.gLocalAssetContainer["gConst"] = function(g) { (function(exports, require, module, __filename, __dirname) {
// font000: 通常用縁なし
//  黒100
const font000 = new g.DynamicFont({
  game: g.game, 
  fontFamily: "sans-serif",
  fontWeight: "bold",
  size: 100,
  fontColor: "black",
});
// font001: タイトル用
//  白50/黒10
const font001 = new g.DynamicFont({
  game: g.game, 
  fontFamily: "sans-serif",
  fontWeight: "bold",
  size: 50,
  fontColor: "white",
  strokeWidth: 10,
  strokeColor: "black",
});
// font002: タイトル説明用
//  黒50/城10
const font002 = new g.DynamicFont({
  game: g.game, 
  fontFamily: "sans-serif",
  fontWeight: "bold",
  size: 50,
  fontColor: "black",
  strokeWidth: 10,
  strokeColor: "white",
});
// font003: アイキャッチフロア数表示用
//  橙80/白10
const font003 = new g.DynamicFont({
  game: g.game, 
  fontFamily: "sans-serif",
  fontWeight: "bold",
  size: 120,
  fontColor: "darkgray",
  strokeWidth: 5,
  strokeColor: "black",
});


module.exports = {

  // ～～ゲーム用（個別）～～

  // 画面における位置
  layout: {
    // 今回のベースはキャラの表示位置。基本手には画面の中央
    base: {
      x: 450,
      y: 300,
    },
    // 縮尺（斜め見下ろしを想定したy軸方向の縮尺とアンカー位置
    scaleY: 1,
    anchorY: 0.5, // ※set_constで計算・初期値は仮
  },
  // 描写上の各ピクセル数サイズ
  size: {
    block: 400/12, // 標準表示時の１ブロックの１辺
    chara: 100, // 標準表示時の１キャラ分の１辺
  },
  // フロアデータ
  floor: {
    max_col: 24, // 最大横幅(ブロック数)
    max_raw: 12, // 最大縦幅(ブロック数)
    max: 5, // 広さが最大になるフロア数
    col: [ 4, 24, 10, 12, 14, 16],
    raw: [ 4, 12, 5, 6, 7, 8],
    rate: 0.7, // フィールドに存在させるブロックの割合
    rate2: 0.65, // エクストラモード時の値
  },
  // ブロックデータ
  block: {
    // 画像データ情報
    width: 43, // 画像データにおけるピクセル数
    height: 43, // 画像データにおけるピクセル数
    src: {
      x: 1, // 画像データにおける起点座標
      y: 1, // 画像データにおける起点座標
      cyc: 44, // 画像データ切り替えにおける次の画像までの幅
    },
    scale: 1, // 標準サイズで表示する場合の縮尺（※set_constで計算・初期値は仮
    // データ状の位置情報
    x: {}, // ※set_constで計算・初期値は仮
    y: {}, // ※set_constで計算・初期値は仮
    speed: 10,
    speed2: 6,
  },
  // オブジェクトデータ
  object: {
    // 画像データ情報
    width: 60, // 画像データにおけるピクセル数
    height: 60, // 画像データにおけるピクセル数
    src: {
      x: 1, // 画像データにおける起点座標
      y: 1, // 画像データにおける起点座標
      cyc: 62, // 画像データ切り替えにおける次の画像までの幅
    },
    scale: 1, // 標準サイズで表示する場合の縮尺（※set_constで計算・初期値は仮
    // ゲームデータ関係
    max: 10, // フロアで登場するmax数。画像エンティティの事前準備個数
  },
  // スティック
  stick: {
    // 画像データ情報
    size: 200, // 画像データにおけるピクセル数
    scale: [1, 0.6],
    opacity: [0.4, 0.8],
    // 位置情報
    x: 130,
    y: g.game.height-130,
  },
  // playerデータ
  player: {
    width: 102,
    height: 102,
    src: {
      x: 1,
      y: 1,
      cyc: 104, 
    },
    scale: 1,
  },
  // moveデータ
  move: {
    range: 50, // 移動クリック&ドラッグ時に速度maxになる境界
    speed: 50/10, // 速度max値（※set_constで計算・初期値は仮
  },
  // ゲームコントロール関係
  ctrl: {
    // ランダム値関係
    rand: {
      num: 1000, // 準備しておくランダム値の個数
      ad: 1.07, // ２周目以降の微修正用パラメータ
    },
    // 準備しておくブロックエンティティの個数
    block: {
      col: 21, // ※set_constで計算・初期値は仮
      raw: 13, // ※set_constで計算・初期値は仮
    },
  },
  // 各処理のアニメーション等のstep数
  step: {
    eyecatch: 60,
    turn: 6, // 1ターン:移動でキャラサイズ分を動く時間に相当し、ゲーム自体のspeedに直結する
  },
  // テスト用フロアデータ
  test: [
    // フロア0(ダミー)
    [
      [], // raw=0(ダミー)
    ],
    // フロア1
    [
      [], // raw=0(ダミー)
      [0, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,0,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,1,0,1,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,0,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],

      [0, 1,1,0,1,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,0,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,1,1,0,0, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],

      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],

      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
      [0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0, 1,0,1,0,1, 0,1,0,1,0],
    ],
  ],
  // アイキャッチメッセージ
  eyecatch: {
    x: 900, // 移動開始前の差分
    x1: 300, // 画面上の位置
    x2: 300, // 画面上の位置
    time1: 60, // メッセージ1が動き始める時間
    time2: 57, // メッセージ2が動き始める時間
    time: 10, // メッセージが画面上の位置に到着するまでの時間
  },




  // ～～全体共通～～

	// ローカルストレージを使うかどうか
  jud_localstorage: 1,

  // フォント定義
  font000: font000, // 黒100
  font001: font001, // 白50/黒10
  font002: font002, // 黒50/白10
  font003: font003, // 橙80/白10

  // テンプレ適宜追加分の利用フラグ
  use_add_log: 1,
  use_setting: 1,
  use_setting2: 1,
  use_mente: 0,
  use_title_anime: 1,
  use_help: 0,  // 0:なし, 1:一枚もの, 2:詳細(複数ページ)
  use_tips: 1,  
  use_news: 0,
  use_best: 0,

  // テンプレ利用パターン選択フラグ
  back: 2, // 0:なし, 1:台紙, 2:画像
  title: 1, // 0:なし, 1:ラベル, 2:画像

  // シーンの定義
  scene_title: 0,	// タイトル表示時間
  scene_ready: 1,	// タイトルから遷移後、ゲームがスタートするまでの時間
  scene_main: 2,	// ゲーム時間
  scene_losstime: 3, 	// タイムアップ後、ランキングの自動表示までの待ち時間（ゲーム処理完了後にカウント
  scene_after: 4,	// アツマールの場合はランキングの自動表示
  // 時間表示の設定：切り上げか切り捨てか
  time_round: 1, // 1:切り上げ, 0:切り捨て 
  // 時間の定義
  time_title: 10, 	// タイトルの時間
  time_ready: 4, //1/g.game.fps, //5, 	// 開始前の準備時間
  time_main: 120,	// ゲームの制限時間　★今作ではmain⇒losstimeの制御は行わず別ハンドラを準備する
  time_main2: 90,	// ゲームの制限時間　★今作ではmain⇒losstimeの制御は行わず別ハンドラを準備する
  time_losstime: 60,	// 終了後のロスタイム
  // 設定ボタン関係の定義
  button_src_interval: 30,	// 設定ボタン画像ファイル内のボタン表示間隔
  // 全体管理パラメータ
  set_bgm: 0,		// ゲーム側でBGMを用意／公開している場合に１
  set_se: 1,		// ゲームがでSEを養子／後悔している場合は１
  bgm_button: 1,	// ＜値はダミー＞プレーヤーがBGMのオンオフを選択した結果。全シーンで共用する
  se_button: 1,  	// ＜値はダミー＞プレーヤーがSEのオンオフを選択した結果。全シーンで共用する。
  bgm01_volume_def: 0.3,	// BGM01ボリュームのプログラム内調整用
  se00_volume_def: 1,		// SE00ボリュームのプログラム内調整用
  bgm_volume: 5,	// BGMボリューム。
  se_volume: 5,		// SEボリューム
  bgm_start: 1, // main開始後、実際にBGMが開始する時間（秒単位）

  jud_rensyu: 0,	// ＜値はダミー＞通常モードが練習モードか選択した結果
  jud_restart: 0,	// ＜値はダミー＞タイトル画面に戻った際のフラグ

  // ヘルプ一枚ものを利用する場合の各種定数
  help1: {
    x: 820,
    y: 120,
    step_max: 15,
  },

  // ヘルプ詳細（複数ページ）を利用する場合の各種定数など
  help2: {
    page: 3,
    cut: [0,3,2,2],
    waite: [0,30,30,30],
    id: ["", 
      ["","help01-01","help01-02","help01-03"],
      ["","help02-01","help02-02"],
      ["","help03-01","help03-02"],
    ],    
  },

  // tips1情報の各種データ
  tips1: {
    step_max: 900,
    x: 0,
    y: 515,
    width: 100,
    number: 2,
    text: [
      "tips1-00(ダミー)",
      "キーボード対応　W:自動　E:drag　A:戻る　D:配る", //"tips1-01",
      // "「戻る」はキーA、「配る」はキーDで実施できます", //"tips1-01",
      // "バグ発生/対応中により、undo機能を一時的に制限しています",
      "カードが多い列は、暗いカードをクリックで詳細表示できます", //"tips1-02",
      "さいころのロストが続いているときは、空いているいるところに１つずつゆっくりなげこんでみよう", //"tips1-02",
      "コンボを伸ばすために、投射を止めることも大事だぞ", //,
      "コンボはさいころを投げるとリセットされてしまうぞ", //,
    ],
    len: 1500, // メッセージの最大長さの想定
    time: 15, // 画面内に文字が存在する時間(全体ではなく１文字で)
    times: [
      , // 表示時間
      5,4,3,2,10, 10,10,10,10,10,
    ],
    max: [
      , // 表示回数上限
      1000,1000,1000,1000,1000, 20,20,3,3,3,
    ],
    width: [
      , // 表示時の台紙サイズ
      700,800,700,800,700, 700,800,100,100,100,
    ],  
  },

  // tips2情報の各種データ
  tips2: {
    // x: 0,
    // y: 180,
    width: 900,
    number: 1,
    text: [
      "tips2-00(ダミー)",
      "tips2-01",
    ],
  },

  // 更新情報の各種データ
  news: {
    number: 2,
    date: [
      [,,,],
      [2023, 5, 1, 1],
      [2023, 10, 19, 1],
    ],
    id: [
      "ダミーデータ",
      "2023/5/1(0.0.0.0)",
      "2023/10/19(0.0.0.1)",
    ],
    msg1: [
      "ダミーデータ",
      "～を更新しました１。",
      "～を更新しました２。",
    ],
    msg2: [
      "ダミーデータ",
      "（※～～１）",
      "（※～～２）",
    ],
  },


};


})(g.module.exports, g.module.require, g.module, g.filename, g.dirname);
}